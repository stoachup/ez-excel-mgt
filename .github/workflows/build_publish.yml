name: Build and Publish Wheels

on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # This will trigger on tags like v1.0.0, v2.1.3, etc.
  pull_request:
    branches:
      - master

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python on the runners
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      # Step 4: Build the wheels using maturin
      - name: Build wheels with maturin
        run: |
          maturin build --release --manylinux=off --strip

      # Step 5: Upload the wheels as GitHub artifacts (for inspection if needed)
      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./target/wheels

  # PyPI upload job (only on push to main branch)
  publish:
    needs: build_wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      # Step 6: Download the built wheels from the previous job
      - name: Download built wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels

      # Step 7: Publish the wheels to PyPI
      - name: Publish to PyPI
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }} --no-interaction --skip-existing